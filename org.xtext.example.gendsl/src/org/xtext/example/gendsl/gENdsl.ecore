<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="gENdsl" nsURI="http://www.example.org/gENdsl" nsPrefix="gENdsl">
  <eAnnotations source="http://www.eclipse.org/OCL/Import">
    <details key="ecore" value="http://www.eclipse.org/emf/2002/Ecore"/>
  </eAnnotations>
  <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
    <details key="invocationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="settingDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
    <details key="validationDelegates" value="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot"/>
  </eAnnotations>
  <eClassifiers xsi:type="ecore:EClass" name="GenealogyTree">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="familyName" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="established" eType="#//DateX"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="person" upperBound="-1"
        eType="#//Person" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Marriage">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="min2Spouses parentsOlder noOverlap"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="min2Spouses" value="spouses->size() >= 2"/>
      <details key="parentsOlder" value="spouses->forAll(s | children->forAll(c |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(c.birthDate.isNotNull() and s.birthDate.isNotNull()) implies (c.birthDate.after(s.birthDate))))"/>
      <details key="noOverlap" value="(self.fromDate.isNotNull() and self.toDate.isNotNull()) implies (spouses->forAll(s1 |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;s1.marriages->forAll(m |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(m &lt;> self and m.fromDate.isNotNull() and m.toDate.isNotNull()) implies (m.fromDate.after(self.toDate) or m.toDate.before(self.fromDate)))))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="spouses" upperBound="-1"
        eType="#//Person" eOpposite="#//Person/marriages"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="fromDate" eType="#//DateX"
        containment="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="{&#xA;initial: OrderedSet{}->append(Person.allInstances()->select(p : Person | p.marriage->count(self) > 0)->asSequence()->first());&#xA;}*"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="toDate" eType="#//DateX"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//Person" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//TypeOfIntimateRelationship">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="derivation" value="if self.spouses->size() > 2 then (if (self.spouses->iterate(p : Person; m : Integer = 0 | if&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;p.gender = Gender::MALE then m + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else m&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif) > 1 and self.spouses->iterate(p : Person; m : Integer = 0 | if p.gender = Gender::FEMALE then m + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else m&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endif) > 1) then TypeOfIntimateRelationship::POLYFIDELITY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else TypeOfIntimateRelationship::POLYGAMY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif) else TypeOfIntimateRelationship::MONOGAMY&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;endif"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Cohabitation">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="min2Partners parentsOlder"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="min2Partners" value="partners->size() >= 2"/>
      <details key="parentsOlder" value="partners->forAll(s | children->forAll(c |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(c.birthDate.isNotNull() and s.birthDate.isNotNull()) implies (c.birthDate.after(s.birthDate))))"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="partners" upperBound="-1"
        eType="#//Person" eOpposite="#//Person/cohabitations"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//Person" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="legitimate" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//TypeOfIntimateRelationship"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Person">
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore">
      <details key="constraints" value="noName leastOneMarriageOrCohabitation oneRoot inMyMarriages inMyCohabitations marrigesInLifetime"/>
    </eAnnotations>
    <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
      <details key="noName" value="not unknown implies givenName &lt;> ''"/>
      <details key="leastOneMarriageOrCohabitation" value="(type = TypeOfPerson::MARRIED) implies (marriages->notEmpty() or cohabitations->notEmpty())"/>
      <details key="oneRoot" value="Person.allInstances()->select(p : Person |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;((p.type &lt;> TypeOfPerson::MARRIED) and &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;((Marriage.allInstances()->select(m : Marriage | m.children->includes(p))->isEmpty()) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and (Cohabitation.allInstances()->select(c : Cohabitation | c.children->includes(p))->isEmpty()))))->size() = 1"/>
      <details key="inMyMarriages" value="marriage->forAll(spouses->count(self) = 1)"/>
      <details key="inMyCohabitations" value="cohabitation->forAll(partners->count(self) = 1)"/>
      <details key="marrigesInLifetime" value="(self.birthDate.isNotNull() implies marriages->forAll(m |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;m.fromDate.isNotNull() implies self.birthDate.before(m.fromDate)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  and&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  (self.deathDate.isNotNull() implies marriages->forAll(m |&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;m.toDate.isNotNull() implies self.deathDate.after(m.toDate)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
    </eAnnotations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="givenName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="birthDate" eType="#//DateX"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="deathDate" eType="#//DateX"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="birthPlace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="deathPlace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="restingPlace" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="#//TypeOfPerson"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="gender" eType="#//Gender"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="otherNames" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="nickname" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="marriages" upperBound="-1"
        eType="#//Marriage" eOpposite="#//Marriage/spouses"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cohabitations" upperBound="-1"
        eType="#//Cohabitation" eOpposite="#//Cohabitation/partners"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="deathCause" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="personhistory" upperBound="-1"
        eType="#//PersonHistory" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="cohabitation" upperBound="-1"
        eType="#//Cohabitation" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="marriage" upperBound="-1"
        eType="#//Marriage" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="unknown" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TypeOfPerson">
    <eLiterals name="BIOLOGICAL"/>
    <eLiterals name="ADOPTED" value="1"/>
    <eLiterals name="SEMIADOPTED" value="2"/>
    <eLiterals name="MARRIED" value="3"/>
    <eLiterals name="DISOWNED" value="4"/>
    <eLiterals name="ILLEGITIMATE" value="5"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Gender">
    <eLiterals name="MALE"/>
    <eLiterals name="FEMALE" value="1"/>
    <eLiterals name="BIGENDER" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TypeOfIntimateRelationship">
    <eLiterals name="MONOGAMY"/>
    <eLiterals name="POLYGAMY" value="1"/>
    <eLiterals name="POLYFIDELITY" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PersonHistory">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="gender" eType="#//Gender"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="givenName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="changed" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDate"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DateX">
    <eOperations name="before" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if self.year->isEmpty() or d.year->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.year &lt; d.year then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;if self.year > d.year then false else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;if self.month->isEmpty() or d.month->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.month &lt; d.month then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;if self.month > d.month then false else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;if self.day->isEmpty() or d.day->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.day &lt; d.day then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   endif"/>
      </eAnnotations>
      <eParameters name="d" eType="#//DateX"/>
    </eOperations>
    <eOperations name="after" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if self.year->isEmpty() or d.year->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.year > d.year then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;if self.year &lt; d.year then false else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;if self.month->isEmpty() or d.month->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.month > d.month then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;if self.month &lt; d.month then false else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;if self.day->isEmpty() or d.day->isEmpty() then null else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;if self.day > d.day then true else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;false&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;&#x9;endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   &#x9;&#x9;endif&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   endif"/>
      </eAnnotations>
      <eParameters name="d" eType="#//DateX"/>
    </eOperations>
    <eOperations name="isNull" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="self.year->isEmpty()"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isNotNull" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot">
        <details key="body" value="if self->isEmpty() then false else (if self.year->notEmpty() then true else false endif)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="year" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="month" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="day" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
  </eClassifiers>
</ecore:EPackage>
