/*
 * generated by Xtext 2.10.0
 */
grammar InternalGsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.genDSL2.gsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.genDSL2.gsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.genDSL2.gsl.services.GslGrammarAccess;

}

@parser::members {

 	private GslGrammarAccess grammarAccess;

    public InternalGslParser(TokenStream input, GslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "GenealogyTree";
   	}

   	@Override
   	protected GslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleGenealogyTree
entryRuleGenealogyTree returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenealogyTreeRule()); }
	iv_ruleGenealogyTree=ruleGenealogyTree
	{ $current=$iv_ruleGenealogyTree.current; }
	EOF;

// Rule GenealogyTree
ruleGenealogyTree returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GenealogyTree'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenealogyTreeAccess().getGenealogyTreeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenealogyTreeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='familyName'
		{
			newLeafNode(otherlv_2, grammarAccess.getGenealogyTreeAccess().getFamilyNameKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenealogyTreeAccess().getFamilyNameEStringParserRuleCall_3_0());
				}
				lv_familyName_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenealogyTreeRule());
					}
					set(
						$current,
						"familyName",
						lv_familyName_3_0,
						"org.xtext.genDSL2.gsl.Gsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='established'
			{
				newLeafNode(otherlv_4, grammarAccess.getGenealogyTreeAccess().getEstablishedKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenealogyTreeAccess().getEstablishedDateXParserRuleCall_4_1_0());
					}
					lv_established_5_0=ruleDateX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenealogyTreeRule());
						}
						set(
							$current,
							"established",
							lv_established_5_0,
							"org.xtext.genDSL2.gsl.Gsl.DateX");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='persons'
			{
				newLeafNode(otherlv_6, grammarAccess.getGenealogyTreeAccess().getPersonsKeyword_5_0());
			}
			otherlv_7='{'
			{
				newLeafNode(otherlv_7, grammarAccess.getGenealogyTreeAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGenealogyTreeAccess().getPersonPersonParserRuleCall_5_2_0());
					}
					lv_person_8_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGenealogyTreeRule());
						}
						add(
							$current,
							"person",
							lv_person_8_0,
							"org.xtext.genDSL2.gsl.Gsl.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getGenealogyTreeAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getGenealogyTreeAccess().getPersonPersonParserRuleCall_5_3_1_0());
						}
						lv_person_10_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getGenealogyTreeRule());
							}
							add(
								$current,
								"person",
								lv_person_10_0,
								"org.xtext.genDSL2.gsl.Gsl.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getGenealogyTreeAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getGenealogyTreeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleDateX
entryRuleDateX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateXRule()); }
	iv_ruleDateX=ruleDateX
	{ $current=$iv_ruleDateX.current; }
	EOF;

// Rule DateX
ruleDateX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDateXAccess().getDateXAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDateXAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='year'
			{
				newLeafNode(otherlv_2, grammarAccess.getDateXAccess().getYearKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateXAccess().getYearEIntParserRuleCall_2_1_0());
					}
					lv_year_3_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateXRule());
						}
						set(
							$current,
							"year",
							lv_year_3_0,
							"org.xtext.genDSL2.gsl.Gsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='month'
			{
				newLeafNode(otherlv_4, grammarAccess.getDateXAccess().getMonthKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateXAccess().getMonthEIntParserRuleCall_3_1_0());
					}
					lv_month_5_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateXRule());
						}
						set(
							$current,
							"month",
							lv_month_5_0,
							"org.xtext.genDSL2.gsl.Gsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='day'
			{
				newLeafNode(otherlv_6, grammarAccess.getDateXAccess().getDayKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDateXAccess().getDayEIntParserRuleCall_4_1_0());
					}
					lv_day_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDateXRule());
						}
						set(
							$current,
							"day",
							lv_day_7_0,
							"org.xtext.genDSL2.gsl.Gsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getDateXAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonAccess().getPersonAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonAccess().getGivenNameEStringParserRuleCall_1_0());
				}
				lv_givenName_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonRule());
					}
					set(
						$current,
						"givenName",
						lv_givenName_1_0,
						"org.xtext.genDSL2.gsl.Gsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getPersonAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_4='unknown'
								{
									newLeafNode(otherlv_4, grammarAccess.getPersonAccess().getUnknownKeyword_3_0_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getUnknownEBooleanParserRuleCall_3_0_1_0());
										}
										lv_unknown_5_0=ruleEBoolean
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"unknown",
												lv_unknown_5_0,
												"org.xtext.genDSL2.gsl.Gsl.EBoolean");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_6='birthPlace'
								{
									newLeafNode(otherlv_6, grammarAccess.getPersonAccess().getBirthPlaceKeyword_3_1_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getBirthPlaceEStringParserRuleCall_3_1_1_0());
										}
										lv_birthPlace_7_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"birthPlace",
												lv_birthPlace_7_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_8='deathPlace'
								{
									newLeafNode(otherlv_8, grammarAccess.getPersonAccess().getDeathPlaceKeyword_3_2_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getDeathPlaceEStringParserRuleCall_3_2_1_0());
										}
										lv_deathPlace_9_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"deathPlace",
												lv_deathPlace_9_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_10='restingPlace'
								{
									newLeafNode(otherlv_10, grammarAccess.getPersonAccess().getRestingPlaceKeyword_3_3_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getRestingPlaceEStringParserRuleCall_3_3_1_0());
										}
										lv_restingPlace_11_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"restingPlace",
												lv_restingPlace_11_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_12='type'
								{
									newLeafNode(otherlv_12, grammarAccess.getPersonAccess().getTypeKeyword_3_4_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getTypeTypeOfPersonEnumRuleCall_3_4_1_0());
										}
										lv_type_13_0=ruleTypeOfPerson
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"type",
												lv_type_13_0,
												"org.xtext.genDSL2.gsl.Gsl.TypeOfPerson");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_14='gender'
								{
									newLeafNode(otherlv_14, grammarAccess.getPersonAccess().getGenderKeyword_3_5_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getGenderGenderEnumRuleCall_3_5_1_0());
										}
										lv_gender_15_0=ruleGender
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"gender",
												lv_gender_15_0,
												"org.xtext.genDSL2.gsl.Gsl.Gender");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 6)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 6);
					}
								({true}?=>(otherlv_16='otherNames'
								{
									newLeafNode(otherlv_16, grammarAccess.getPersonAccess().getOtherNamesKeyword_3_6_0());
								}
								otherlv_17='{'
								{
									newLeafNode(otherlv_17, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_3_6_1());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getOtherNamesEStringParserRuleCall_3_6_2_0());
										}
										lv_otherNames_18_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											add(
												$current,
												"otherNames",
												lv_otherNames_18_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_19=','
									{
										newLeafNode(otherlv_19, grammarAccess.getPersonAccess().getCommaKeyword_3_6_3_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getPersonAccess().getOtherNamesEStringParserRuleCall_3_6_3_1_0());
											}
											lv_otherNames_20_0=ruleEString
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getPersonRule());
												}
												add(
													$current,
													"otherNames",
													lv_otherNames_20_0,
													"org.xtext.genDSL2.gsl.Gsl.EString");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								otherlv_21='}'
								{
									newLeafNode(otherlv_21, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_3_6_4());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 7)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 7);
					}
								({true}?=>(otherlv_22='nickname'
								{
									newLeafNode(otherlv_22, grammarAccess.getPersonAccess().getNicknameKeyword_3_7_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getNicknameEStringParserRuleCall_3_7_1_0());
										}
										lv_nickname_23_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"nickname",
												lv_nickname_23_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 8)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 8);
					}
								({true}?=>(otherlv_24='deathCause'
								{
									newLeafNode(otherlv_24, grammarAccess.getPersonAccess().getDeathCauseKeyword_3_8_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getDeathCauseEStringParserRuleCall_3_8_1_0());
										}
										lv_deathCause_25_0=ruleEString
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"deathCause",
												lv_deathCause_25_0,
												"org.xtext.genDSL2.gsl.Gsl.EString");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 9)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 9);
					}
								({true}?=>(otherlv_26='birthDate'
								{
									newLeafNode(otherlv_26, grammarAccess.getPersonAccess().getBirthDateKeyword_3_9_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getBirthDateDateXParserRuleCall_3_9_1_0());
										}
										lv_birthDate_27_0=ruleDateX
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"birthDate",
												lv_birthDate_27_0,
												"org.xtext.genDSL2.gsl.Gsl.DateX");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 10)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getPersonAccess().getUnorderedGroup_3(), 10);
					}
								({true}?=>(otherlv_28='deathDate'
								{
									newLeafNode(otherlv_28, grammarAccess.getPersonAccess().getDeathDateKeyword_3_10_0());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getPersonAccess().getDeathDateDateXParserRuleCall_3_10_1_0());
										}
										lv_deathDate_29_0=ruleDateX
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPersonRule());
											}
											set(
												$current,
												"deathDate",
												lv_deathDate_29_0,
												"org.xtext.genDSL2.gsl.Gsl.DateX");
											afterParserOrEnumRuleCall();
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getPersonAccess().getUnorderedGroup_3());
					}
				)
			)
					)*
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getPersonAccess().getUnorderedGroup_3());
				}
		)
		(
			otherlv_30='personhistory'
			{
				newLeafNode(otherlv_30, grammarAccess.getPersonAccess().getPersonhistoryKeyword_4_0());
			}
			otherlv_31='{'
			{
				newLeafNode(otherlv_31, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getPersonhistoryPersonHistoryParserRuleCall_4_2_0());
					}
					lv_personhistory_32_0=rulePersonHistory
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						add(
							$current,
							"personhistory",
							lv_personhistory_32_0,
							"org.xtext.genDSL2.gsl.Gsl.PersonHistory");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_33=','
				{
					newLeafNode(otherlv_33, grammarAccess.getPersonAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPersonAccess().getPersonhistoryPersonHistoryParserRuleCall_4_3_1_0());
						}
						lv_personhistory_34_0=rulePersonHistory
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPersonRule());
							}
							add(
								$current,
								"personhistory",
								lv_personhistory_34_0,
								"org.xtext.genDSL2.gsl.Gsl.PersonHistory");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_35='}'
			{
				newLeafNode(otherlv_35, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_36='cohabitation'
			{
				newLeafNode(otherlv_36, grammarAccess.getPersonAccess().getCohabitationKeyword_5_0());
			}
			otherlv_37='{'
			{
				newLeafNode(otherlv_37, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getCohabitationCohabitationParserRuleCall_5_2_0());
					}
					lv_cohabitation_38_0=ruleCohabitation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						add(
							$current,
							"cohabitation",
							lv_cohabitation_38_0,
							"org.xtext.genDSL2.gsl.Gsl.Cohabitation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_39=','
				{
					newLeafNode(otherlv_39, grammarAccess.getPersonAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPersonAccess().getCohabitationCohabitationParserRuleCall_5_3_1_0());
						}
						lv_cohabitation_40_0=ruleCohabitation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPersonRule());
							}
							add(
								$current,
								"cohabitation",
								lv_cohabitation_40_0,
								"org.xtext.genDSL2.gsl.Gsl.Cohabitation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_41='}'
			{
				newLeafNode(otherlv_41, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_42='marriage'
			{
				newLeafNode(otherlv_42, grammarAccess.getPersonAccess().getMarriageKeyword_6_0());
			}
			otherlv_43='{'
			{
				newLeafNode(otherlv_43, grammarAccess.getPersonAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonAccess().getMarriageMarriageParserRuleCall_6_2_0());
					}
					lv_marriage_44_0=ruleMarriage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonRule());
						}
						add(
							$current,
							"marriage",
							lv_marriage_44_0,
							"org.xtext.genDSL2.gsl.Gsl.Marriage");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_45=','
				{
					newLeafNode(otherlv_45, grammarAccess.getPersonAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPersonAccess().getMarriageMarriageParserRuleCall_6_3_1_0());
						}
						lv_marriage_46_0=ruleMarriage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPersonRule());
							}
							add(
								$current,
								"marriage",
								lv_marriage_46_0,
								"org.xtext.genDSL2.gsl.Gsl.Marriage");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_47='}'
			{
				newLeafNode(otherlv_47, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_48='}'
		{
			newLeafNode(otherlv_48, grammarAccess.getPersonAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePersonHistory
entryRulePersonHistory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonHistoryRule()); }
	iv_rulePersonHistory=rulePersonHistory
	{ $current=$iv_rulePersonHistory.current; }
	EOF;

// Rule PersonHistory
rulePersonHistory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonHistoryAccess().getPersonHistoryAction_0(),
					$current);
			}
		)
		otherlv_1='PersonHistory'
		{
			newLeafNode(otherlv_1, grammarAccess.getPersonHistoryAccess().getPersonHistoryKeyword_1());
		}
		(
			otherlv_2='gender'
			{
				newLeafNode(otherlv_2, grammarAccess.getPersonHistoryAccess().getGenderKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonHistoryAccess().getGenderGenderEnumRuleCall_2_1_0());
					}
					lv_gender_3_0=ruleGender
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonHistoryRule());
						}
						set(
							$current,
							"gender",
							lv_gender_3_0,
							"org.xtext.genDSL2.gsl.Gsl.Gender");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='givenName'
			{
				newLeafNode(otherlv_4, grammarAccess.getPersonHistoryAccess().getGivenNameKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonHistoryAccess().getGivenNameEStringParserRuleCall_3_1_0());
					}
					lv_givenName_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonHistoryRule());
						}
						set(
							$current,
							"givenName",
							lv_givenName_5_0,
							"org.xtext.genDSL2.gsl.Gsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='changed'
			{
				newLeafNode(otherlv_6, grammarAccess.getPersonHistoryAccess().getChangedKeyword_4_0());
			}
			(
				(
					lv_changed_7_0=RULE_EDATE
					{
						newLeafNode(lv_changed_7_0, grammarAccess.getPersonHistoryAccess().getChangedEDATETerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonHistoryRule());
						}
						setWithLastConsumed(
							$current,
							"changed",
							lv_changed_7_0,
							"org.xtext.genDSL2.gsl.Gsl.EDATE");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleCohabitation
entryRuleCohabitation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCohabitationRule()); }
	iv_ruleCohabitation=ruleCohabitation
	{ $current=$iv_ruleCohabitation.current; }
	EOF;

// Rule Cohabitation
ruleCohabitation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCohabitationAccess().getCohabitationAction_0(),
					$current);
			}
		)
		(
			(
				lv_legitimate_1_0='legitimate'
				{
					newLeafNode(lv_legitimate_1_0, grammarAccess.getCohabitationAccess().getLegitimateLegitimateKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCohabitationRule());
					}
					setWithLastConsumed($current, "legitimate", true, "legitimate");
				}
			)
		)?
		otherlv_2='Cohabitation'
		{
			newLeafNode(otherlv_2, grammarAccess.getCohabitationAccess().getCohabitationKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getCohabitationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getCohabitationAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCohabitationAccess().getTypeTypeOfIntimateRelationshipEnumRuleCall_4_1_0());
					}
					lv_type_5_0=ruleTypeOfIntimateRelationship
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCohabitationRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.genDSL2.gsl.Gsl.TypeOfIntimateRelationship");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='partners'
			{
				newLeafNode(otherlv_6, grammarAccess.getCohabitationAccess().getPartnersKeyword_5_0());
			}
			otherlv_7='('
			{
				newLeafNode(otherlv_7, grammarAccess.getCohabitationAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCohabitationRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCohabitationAccess().getPartnersPersonCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getCohabitationAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCohabitationRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCohabitationAccess().getPartnersPersonCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getCohabitationAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		(
			otherlv_12='children'
			{
				newLeafNode(otherlv_12, grammarAccess.getCohabitationAccess().getChildrenKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getCohabitationAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCohabitationAccess().getChildrenPersonParserRuleCall_6_2_0());
					}
					lv_children_14_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCohabitationRule());
						}
						add(
							$current,
							"children",
							lv_children_14_0,
							"org.xtext.genDSL2.gsl.Gsl.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_15=','
				{
					newLeafNode(otherlv_15, grammarAccess.getCohabitationAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCohabitationAccess().getChildrenPersonParserRuleCall_6_3_1_0());
						}
						lv_children_16_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCohabitationRule());
							}
							add(
								$current,
								"children",
								lv_children_16_0,
								"org.xtext.genDSL2.gsl.Gsl.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getCohabitationAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getCohabitationAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleMarriage
entryRuleMarriage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarriageRule()); }
	iv_ruleMarriage=ruleMarriage
	{ $current=$iv_ruleMarriage.current; }
	EOF;

// Rule Marriage
ruleMarriage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMarriageAccess().getMarriageAction_0(),
					$current);
			}
		)
		otherlv_1='Marriage'
		{
			newLeafNode(otherlv_1, grammarAccess.getMarriageAccess().getMarriageKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getMarriageAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getMarriageAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMarriageAccess().getTypeTypeOfIntimateRelationshipEnumRuleCall_3_1_0());
					}
					lv_type_4_0=ruleTypeOfIntimateRelationship
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMarriageRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.xtext.genDSL2.gsl.Gsl.TypeOfIntimateRelationship");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='spouses'
			{
				newLeafNode(otherlv_5, grammarAccess.getMarriageAccess().getSpousesKeyword_4_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getMarriageAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMarriageRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getMarriageAccess().getSpousesPersonCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getMarriageAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMarriageRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getMarriageAccess().getSpousesPersonCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getMarriageAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_11='fromDate'
			{
				newLeafNode(otherlv_11, grammarAccess.getMarriageAccess().getFromDateKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMarriageAccess().getFromDateDateXParserRuleCall_5_1_0());
					}
					lv_fromDate_12_0=ruleDateX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMarriageRule());
						}
						set(
							$current,
							"fromDate",
							lv_fromDate_12_0,
							"org.xtext.genDSL2.gsl.Gsl.DateX");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_13='toDate'
			{
				newLeafNode(otherlv_13, grammarAccess.getMarriageAccess().getToDateKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMarriageAccess().getToDateDateXParserRuleCall_6_1_0());
					}
					lv_toDate_14_0=ruleDateX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMarriageRule());
						}
						set(
							$current,
							"toDate",
							lv_toDate_14_0,
							"org.xtext.genDSL2.gsl.Gsl.DateX");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15='children'
			{
				newLeafNode(otherlv_15, grammarAccess.getMarriageAccess().getChildrenKeyword_7_0());
			}
			otherlv_16='{'
			{
				newLeafNode(otherlv_16, grammarAccess.getMarriageAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMarriageAccess().getChildrenPersonParserRuleCall_7_2_0());
					}
					lv_children_17_0=rulePerson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMarriageRule());
						}
						add(
							$current,
							"children",
							lv_children_17_0,
							"org.xtext.genDSL2.gsl.Gsl.Person");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_18=','
				{
					newLeafNode(otherlv_18, grammarAccess.getMarriageAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMarriageAccess().getChildrenPersonParserRuleCall_7_3_1_0());
						}
						lv_children_19_0=rulePerson
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMarriageRule());
							}
							add(
								$current,
								"children",
								lv_children_19_0,
								"org.xtext.genDSL2.gsl.Gsl.Person");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_20='}'
			{
				newLeafNode(otherlv_20, grammarAccess.getMarriageAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getMarriageAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Rule TypeOfPerson
ruleTypeOfPerson returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='BIOLOGICAL'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getBIOLOGICALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeOfPersonAccess().getBIOLOGICALEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='ADOPTED'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getADOPTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeOfPersonAccess().getADOPTEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SEMIADOPTED'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getSEMIADOPTEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeOfPersonAccess().getSEMIADOPTEDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='MARRIED'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getMARRIEDEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getTypeOfPersonAccess().getMARRIEDEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='DISOWNED'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getDISOWNEDEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getTypeOfPersonAccess().getDISOWNEDEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='ILLEGITIMATE'
			{
				$current = grammarAccess.getTypeOfPersonAccess().getILLEGITIMATEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getTypeOfPersonAccess().getILLEGITIMATEEnumLiteralDeclaration_5());
			}
		)
	)
;

// Rule Gender
ruleGender returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MALE'
			{
				$current = grammarAccess.getGenderAccess().getMALEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getGenderAccess().getMALEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='FEMALE'
			{
				$current = grammarAccess.getGenderAccess().getFEMALEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getGenderAccess().getFEMALEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BIGENDER'
			{
				$current = grammarAccess.getGenderAccess().getBIGENDEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getGenderAccess().getBIGENDEREnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TypeOfIntimateRelationship
ruleTypeOfIntimateRelationship returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='MONOGAMY'
			{
				$current = grammarAccess.getTypeOfIntimateRelationshipAccess().getMONOGAMYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeOfIntimateRelationshipAccess().getMONOGAMYEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='POLYGAMY'
			{
				$current = grammarAccess.getTypeOfIntimateRelationshipAccess().getPOLYGAMYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeOfIntimateRelationshipAccess().getPOLYGAMYEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='POLYFIDELITY'
			{
				$current = grammarAccess.getTypeOfIntimateRelationshipAccess().getPOLYFIDELITYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeOfIntimateRelationshipAccess().getPOLYFIDELITYEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_EDATE : '0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
