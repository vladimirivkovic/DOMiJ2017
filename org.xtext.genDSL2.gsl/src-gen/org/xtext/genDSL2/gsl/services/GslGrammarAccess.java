/*
 * generated by Xtext 2.10.0
 */
package org.xtext.genDSL2.gsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GenealogyTreeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.GenealogyTree");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenealogyTreeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cFamilyNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFamilyNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFamilyNameEStringParserRuleCall_3_0 = (RuleCall)cFamilyNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEstablishedKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cEstablishedAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cEstablishedDateXParserRuleCall_4_1_0 = (RuleCall)cEstablishedAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPersonsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPersonAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPersonPersonParserRuleCall_5_2_0 = (RuleCall)cPersonAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPersonAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cPersonPersonParserRuleCall_5_3_1_0 = (RuleCall)cPersonAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//GenealogyTree:
		//	'GenealogyTree'
		//	'{'
		//	'familyName' familyName=EString ('established' established=DateX)? ('persons' '{' person+=Person ("," person+=Person)*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'GenealogyTree' '{' 'familyName' familyName=EString ('established' established=DateX)? ('persons' '{' person+=Person
		//("," person+=Person)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'GenealogyTree'
		public Keyword getGenealogyTreeKeyword_0() { return cGenealogyTreeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'familyName'
		public Keyword getFamilyNameKeyword_2() { return cFamilyNameKeyword_2; }
		
		//familyName=EString
		public Assignment getFamilyNameAssignment_3() { return cFamilyNameAssignment_3; }
		
		//EString
		public RuleCall getFamilyNameEStringParserRuleCall_3_0() { return cFamilyNameEStringParserRuleCall_3_0; }
		
		//('established' established=DateX)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'established'
		public Keyword getEstablishedKeyword_4_0() { return cEstablishedKeyword_4_0; }
		
		//established=DateX
		public Assignment getEstablishedAssignment_4_1() { return cEstablishedAssignment_4_1; }
		
		//DateX
		public RuleCall getEstablishedDateXParserRuleCall_4_1_0() { return cEstablishedDateXParserRuleCall_4_1_0; }
		
		//('persons' '{' person+=Person ("," person+=Person)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'persons'
		public Keyword getPersonsKeyword_5_0() { return cPersonsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//person+=Person
		public Assignment getPersonAssignment_5_2() { return cPersonAssignment_5_2; }
		
		//Person
		public RuleCall getPersonPersonParserRuleCall_5_2_0() { return cPersonPersonParserRuleCall_5_2_0; }
		
		//("," person+=Person)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//person+=Person
		public Assignment getPersonAssignment_5_3_1() { return cPersonAssignment_5_3_1; }
		
		//Person
		public RuleCall getPersonPersonParserRuleCall_5_3_1_0() { return cPersonPersonParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class DateXElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.DateX");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDateXAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cYearKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cYearAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cYearEIntParserRuleCall_2_1_0 = (RuleCall)cYearAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cMonthKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMonthAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMonthEIntParserRuleCall_3_1_0 = (RuleCall)cMonthAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDayKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDayAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDayEIntParserRuleCall_4_1_0 = (RuleCall)cDayAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DateX:
		//	{DateX}
		//	//'DateX'
		//	'{' ('year' year=EInt)? ('month' month=EInt)? ('day' day=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{DateX} //'DateX'
		//'{' ('year' year=EInt)? ('month' month=EInt)? ('day' day=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{DateX}
		public Action getDateXAction_0() { return cDateXAction_0; }
		
		////'DateX'
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('year' year=EInt)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'year'
		public Keyword getYearKeyword_2_0() { return cYearKeyword_2_0; }
		
		//year=EInt
		public Assignment getYearAssignment_2_1() { return cYearAssignment_2_1; }
		
		//EInt
		public RuleCall getYearEIntParserRuleCall_2_1_0() { return cYearEIntParserRuleCall_2_1_0; }
		
		//('month' month=EInt)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'month'
		public Keyword getMonthKeyword_3_0() { return cMonthKeyword_3_0; }
		
		//month=EInt
		public Assignment getMonthAssignment_3_1() { return cMonthAssignment_3_1; }
		
		//EInt
		public RuleCall getMonthEIntParserRuleCall_3_1_0() { return cMonthEIntParserRuleCall_3_1_0; }
		
		//('day' day=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'day'
		public Keyword getDayKeyword_4_0() { return cDayKeyword_4_0; }
		
		//day=EInt
		public Assignment getDayAssignment_4_1() { return cDayAssignment_4_1; }
		
		//EInt
		public RuleCall getDayEIntParserRuleCall_4_1_0() { return cDayEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PersonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.Person");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Assignment cGivenNameAssignment_0 = (Assignment)cUnorderedGroup.eContents().get(0);
		private final RuleCall cGivenNameEStringParserRuleCall_0_0 = (RuleCall)cGivenNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cUnknownKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cUnknownAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cUnknownEBooleanParserRuleCall_1_1_0 = (RuleCall)cUnknownAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cBirthPlaceKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cBirthPlaceAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cBirthPlaceEStringParserRuleCall_2_1_0 = (RuleCall)cBirthPlaceAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cDeathPlaceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDeathPlaceAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDeathPlaceEStringParserRuleCall_3_1_0 = (RuleCall)cDeathPlaceAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cRestingPlaceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRestingPlaceAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRestingPlaceEStringParserRuleCall_4_1_0 = (RuleCall)cRestingPlaceAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeTypeOfPersonEnumRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cGenderKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGenderAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGenderGenderEnumRuleCall_6_1_0 = (RuleCall)cGenderAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cUnorderedGroup.eContents().get(7);
		private final Keyword cOtherNamesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cOtherNamesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cOtherNamesEStringParserRuleCall_7_2_0 = (RuleCall)cOtherNamesAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cOtherNamesAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cOtherNamesEStringParserRuleCall_7_3_1_0 = (RuleCall)cOtherNamesAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cUnorderedGroup.eContents().get(8);
		private final Keyword cNicknameKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cNicknameAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cNicknameEStringParserRuleCall_8_1_0 = (RuleCall)cNicknameAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cUnorderedGroup.eContents().get(9);
		private final Keyword cDeathCauseKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cDeathCauseAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cDeathCauseEStringParserRuleCall_9_1_0 = (RuleCall)cDeathCauseAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cUnorderedGroup.eContents().get(10);
		private final Keyword cBirthDateKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cBirthDateAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cBirthDateDateXParserRuleCall_10_1_0 = (RuleCall)cBirthDateAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cUnorderedGroup.eContents().get(11);
		private final Keyword cDeathDateKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cDeathDateAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cDeathDateDateXParserRuleCall_11_1_0 = (RuleCall)cDeathDateAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cUnorderedGroup.eContents().get(12);
		private final Keyword cPersonhistoryKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cPersonhistoryAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cPersonhistoryPersonHistoryParserRuleCall_12_2_0 = (RuleCall)cPersonhistoryAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cPersonhistoryAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cPersonhistoryPersonHistoryParserRuleCall_12_3_1_0 = (RuleCall)cPersonhistoryAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Group cGroup_13 = (Group)cUnorderedGroup.eContents().get(13);
		private final Keyword cCohabitationKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cCohabitationAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cCohabitationCohabitationParserRuleCall_13_2_0 = (RuleCall)cCohabitationAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cCohabitationAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cCohabitationCohabitationParserRuleCall_13_3_1_0 = (RuleCall)cCohabitationAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Group cGroup_14 = (Group)cUnorderedGroup.eContents().get(14);
		private final Keyword cMarriageKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final Assignment cMarriageAssignment_14_2 = (Assignment)cGroup_14.eContents().get(2);
		private final RuleCall cMarriageMarriageParserRuleCall_14_2_0 = (RuleCall)cMarriageAssignment_14_2.eContents().get(0);
		private final Group cGroup_14_3 = (Group)cGroup_14.eContents().get(3);
		private final Keyword cCommaKeyword_14_3_0 = (Keyword)cGroup_14_3.eContents().get(0);
		private final Assignment cMarriageAssignment_14_3_1 = (Assignment)cGroup_14_3.eContents().get(1);
		private final RuleCall cMarriageMarriageParserRuleCall_14_3_1_0 = (RuleCall)cMarriageAssignment_14_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14_4 = (Keyword)cGroup_14.eContents().get(4);
		
		//Person:
		//	givenName=EString
		//	//'{'
		//	& ('unknown' unknown=EBoolean)?
		//	& ('birthPlace' birthPlace=EString)?
		//	& ('deathPlace' deathPlace=EString)?
		//	& ('restingPlace' restingPlace=EString)?
		//	& ('type' type=TypeOfPerson)?
		//	& ('gender' gender=Gender)?
		//	& ('otherNames' '{' otherNames+=EString ("," otherNames+=EString)* '}')?
		//	& ('nickname' nickname=EString)?
		//	& ('deathCause' deathCause=EString)?
		//	& ('birthDate' birthDate=DateX)?
		//	& ('deathDate' deathDate=DateX)?
		//	& ('personhistory' '{' personhistory+=PersonHistory ("," personhistory+=PersonHistory)* '}')?
		//	& ('cohabitation' '{' cohabitation+=Cohabitation ("," cohabitation+=Cohabitation)* '}')?
		//	& ('marriage' '{' marriage+=Marriage ("," marriage+=Marriage)* '}')?
		//	//'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//givenName=EString //'{'
		//& ('unknown' unknown=EBoolean)? & ('birthPlace' birthPlace=EString)? & ('deathPlace' deathPlace=EString)? &
		//('restingPlace' restingPlace=EString)? & ('type' type=TypeOfPerson)? & ('gender' gender=Gender)? & ('otherNames' '{'
		//otherNames+=EString ("," otherNames+=EString)* '}')? & ('nickname' nickname=EString)? & ('deathCause'
		//deathCause=EString)? & ('birthDate' birthDate=DateX)? & ('deathDate' deathDate=DateX)? & ('personhistory' '{'
		//personhistory+=PersonHistory ("," personhistory+=PersonHistory)* '}')? & ('cohabitation' '{' cohabitation+=Cohabitation
		//("," cohabitation+=Cohabitation)* '}')? & ('marriage' '{' marriage+=Marriage ("," marriage+=Marriage)* '}')?
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//givenName=EString
		public Assignment getGivenNameAssignment_0() { return cGivenNameAssignment_0; }
		
		//EString
		public RuleCall getGivenNameEStringParserRuleCall_0_0() { return cGivenNameEStringParserRuleCall_0_0; }
		
		//('unknown' unknown=EBoolean)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'unknown'
		public Keyword getUnknownKeyword_1_0() { return cUnknownKeyword_1_0; }
		
		//unknown=EBoolean
		public Assignment getUnknownAssignment_1_1() { return cUnknownAssignment_1_1; }
		
		//EBoolean
		public RuleCall getUnknownEBooleanParserRuleCall_1_1_0() { return cUnknownEBooleanParserRuleCall_1_1_0; }
		
		//('birthPlace' birthPlace=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'birthPlace'
		public Keyword getBirthPlaceKeyword_2_0() { return cBirthPlaceKeyword_2_0; }
		
		//birthPlace=EString
		public Assignment getBirthPlaceAssignment_2_1() { return cBirthPlaceAssignment_2_1; }
		
		//EString
		public RuleCall getBirthPlaceEStringParserRuleCall_2_1_0() { return cBirthPlaceEStringParserRuleCall_2_1_0; }
		
		//('deathPlace' deathPlace=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'deathPlace'
		public Keyword getDeathPlaceKeyword_3_0() { return cDeathPlaceKeyword_3_0; }
		
		//deathPlace=EString
		public Assignment getDeathPlaceAssignment_3_1() { return cDeathPlaceAssignment_3_1; }
		
		//EString
		public RuleCall getDeathPlaceEStringParserRuleCall_3_1_0() { return cDeathPlaceEStringParserRuleCall_3_1_0; }
		
		//('restingPlace' restingPlace=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'restingPlace'
		public Keyword getRestingPlaceKeyword_4_0() { return cRestingPlaceKeyword_4_0; }
		
		//restingPlace=EString
		public Assignment getRestingPlaceAssignment_4_1() { return cRestingPlaceAssignment_4_1; }
		
		//EString
		public RuleCall getRestingPlaceEStringParserRuleCall_4_1_0() { return cRestingPlaceEStringParserRuleCall_4_1_0; }
		
		//('type' type=TypeOfPerson)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=TypeOfPerson
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//TypeOfPerson
		public RuleCall getTypeTypeOfPersonEnumRuleCall_5_1_0() { return cTypeTypeOfPersonEnumRuleCall_5_1_0; }
		
		//('gender' gender=Gender)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'gender'
		public Keyword getGenderKeyword_6_0() { return cGenderKeyword_6_0; }
		
		//gender=Gender
		public Assignment getGenderAssignment_6_1() { return cGenderAssignment_6_1; }
		
		//Gender
		public RuleCall getGenderGenderEnumRuleCall_6_1_0() { return cGenderGenderEnumRuleCall_6_1_0; }
		
		//('otherNames' '{' otherNames+=EString ("," otherNames+=EString)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'otherNames'
		public Keyword getOtherNamesKeyword_7_0() { return cOtherNamesKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//otherNames+=EString
		public Assignment getOtherNamesAssignment_7_2() { return cOtherNamesAssignment_7_2; }
		
		//EString
		public RuleCall getOtherNamesEStringParserRuleCall_7_2_0() { return cOtherNamesEStringParserRuleCall_7_2_0; }
		
		//("," otherNames+=EString)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//otherNames+=EString
		public Assignment getOtherNamesAssignment_7_3_1() { return cOtherNamesAssignment_7_3_1; }
		
		//EString
		public RuleCall getOtherNamesEStringParserRuleCall_7_3_1_0() { return cOtherNamesEStringParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('nickname' nickname=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'nickname'
		public Keyword getNicknameKeyword_8_0() { return cNicknameKeyword_8_0; }
		
		//nickname=EString
		public Assignment getNicknameAssignment_8_1() { return cNicknameAssignment_8_1; }
		
		//EString
		public RuleCall getNicknameEStringParserRuleCall_8_1_0() { return cNicknameEStringParserRuleCall_8_1_0; }
		
		//('deathCause' deathCause=EString)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'deathCause'
		public Keyword getDeathCauseKeyword_9_0() { return cDeathCauseKeyword_9_0; }
		
		//deathCause=EString
		public Assignment getDeathCauseAssignment_9_1() { return cDeathCauseAssignment_9_1; }
		
		//EString
		public RuleCall getDeathCauseEStringParserRuleCall_9_1_0() { return cDeathCauseEStringParserRuleCall_9_1_0; }
		
		//('birthDate' birthDate=DateX)?
		public Group getGroup_10() { return cGroup_10; }
		
		//'birthDate'
		public Keyword getBirthDateKeyword_10_0() { return cBirthDateKeyword_10_0; }
		
		//birthDate=DateX
		public Assignment getBirthDateAssignment_10_1() { return cBirthDateAssignment_10_1; }
		
		//DateX
		public RuleCall getBirthDateDateXParserRuleCall_10_1_0() { return cBirthDateDateXParserRuleCall_10_1_0; }
		
		//('deathDate' deathDate=DateX)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'deathDate'
		public Keyword getDeathDateKeyword_11_0() { return cDeathDateKeyword_11_0; }
		
		//deathDate=DateX
		public Assignment getDeathDateAssignment_11_1() { return cDeathDateAssignment_11_1; }
		
		//DateX
		public RuleCall getDeathDateDateXParserRuleCall_11_1_0() { return cDeathDateDateXParserRuleCall_11_1_0; }
		
		//('personhistory' '{' personhistory+=PersonHistory ("," personhistory+=PersonHistory)* '}')?
		public Group getGroup_12() { return cGroup_12; }
		
		//'personhistory'
		public Keyword getPersonhistoryKeyword_12_0() { return cPersonhistoryKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//personhistory+=PersonHistory
		public Assignment getPersonhistoryAssignment_12_2() { return cPersonhistoryAssignment_12_2; }
		
		//PersonHistory
		public RuleCall getPersonhistoryPersonHistoryParserRuleCall_12_2_0() { return cPersonhistoryPersonHistoryParserRuleCall_12_2_0; }
		
		//("," personhistory+=PersonHistory)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//personhistory+=PersonHistory
		public Assignment getPersonhistoryAssignment_12_3_1() { return cPersonhistoryAssignment_12_3_1; }
		
		//PersonHistory
		public RuleCall getPersonhistoryPersonHistoryParserRuleCall_12_3_1_0() { return cPersonhistoryPersonHistoryParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//('cohabitation' '{' cohabitation+=Cohabitation ("," cohabitation+=Cohabitation)* '}')?
		public Group getGroup_13() { return cGroup_13; }
		
		//'cohabitation'
		public Keyword getCohabitationKeyword_13_0() { return cCohabitationKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//cohabitation+=Cohabitation
		public Assignment getCohabitationAssignment_13_2() { return cCohabitationAssignment_13_2; }
		
		//Cohabitation
		public RuleCall getCohabitationCohabitationParserRuleCall_13_2_0() { return cCohabitationCohabitationParserRuleCall_13_2_0; }
		
		//("," cohabitation+=Cohabitation)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//cohabitation+=Cohabitation
		public Assignment getCohabitationAssignment_13_3_1() { return cCohabitationAssignment_13_3_1; }
		
		//Cohabitation
		public RuleCall getCohabitationCohabitationParserRuleCall_13_3_1_0() { return cCohabitationCohabitationParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//('marriage' '{' marriage+=Marriage ("," marriage+=Marriage)* '}')?
		public Group getGroup_14() { return cGroup_14; }
		
		//'marriage'
		public Keyword getMarriageKeyword_14_0() { return cMarriageKeyword_14_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_14_1() { return cLeftCurlyBracketKeyword_14_1; }
		
		//marriage+=Marriage
		public Assignment getMarriageAssignment_14_2() { return cMarriageAssignment_14_2; }
		
		//Marriage
		public RuleCall getMarriageMarriageParserRuleCall_14_2_0() { return cMarriageMarriageParserRuleCall_14_2_0; }
		
		//("," marriage+=Marriage)*
		public Group getGroup_14_3() { return cGroup_14_3; }
		
		//","
		public Keyword getCommaKeyword_14_3_0() { return cCommaKeyword_14_3_0; }
		
		//marriage+=Marriage
		public Assignment getMarriageAssignment_14_3_1() { return cMarriageAssignment_14_3_1; }
		
		//Marriage
		public RuleCall getMarriageMarriageParserRuleCall_14_3_1_0() { return cMarriageMarriageParserRuleCall_14_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14_4() { return cRightCurlyBracketKeyword_14_4; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class PersonHistoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.PersonHistory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonHistoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonHistoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGenderKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cGenderAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cGenderGenderEnumRuleCall_2_1_0 = (RuleCall)cGenderAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGivenNameKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cGivenNameAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cGivenNameEStringParserRuleCall_3_1_0 = (RuleCall)cGivenNameAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cChangedKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cChangedAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cChangedEDATETerminalRuleCall_4_1_0 = (RuleCall)cChangedAssignment_4_1.eContents().get(0);
		
		//PersonHistory:
		//	{PersonHistory}
		//	'PersonHistory' ('gender' gender=Gender)? ('givenName' givenName=EString)? ('changed' changed=EDATE)?
		//	//'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{PersonHistory} 'PersonHistory' ('gender' gender=Gender)? ('givenName' givenName=EString)? ('changed' changed=EDATE)?
		public Group getGroup() { return cGroup; }
		
		//{PersonHistory}
		public Action getPersonHistoryAction_0() { return cPersonHistoryAction_0; }
		
		//'PersonHistory'
		public Keyword getPersonHistoryKeyword_1() { return cPersonHistoryKeyword_1; }
		
		//('gender' gender=Gender)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'gender'
		public Keyword getGenderKeyword_2_0() { return cGenderKeyword_2_0; }
		
		//gender=Gender
		public Assignment getGenderAssignment_2_1() { return cGenderAssignment_2_1; }
		
		//Gender
		public RuleCall getGenderGenderEnumRuleCall_2_1_0() { return cGenderGenderEnumRuleCall_2_1_0; }
		
		//('givenName' givenName=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'givenName'
		public Keyword getGivenNameKeyword_3_0() { return cGivenNameKeyword_3_0; }
		
		//givenName=EString
		public Assignment getGivenNameAssignment_3_1() { return cGivenNameAssignment_3_1; }
		
		//EString
		public RuleCall getGivenNameEStringParserRuleCall_3_1_0() { return cGivenNameEStringParserRuleCall_3_1_0; }
		
		//('changed' changed=EDATE)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'changed'
		public Keyword getChangedKeyword_4_0() { return cChangedKeyword_4_0; }
		
		//changed=EDATE
		public Assignment getChangedAssignment_4_1() { return cChangedAssignment_4_1; }
		
		//EDATE
		public RuleCall getChangedEDATETerminalRuleCall_4_1_0() { return cChangedEDATETerminalRuleCall_4_1_0; }
	}
	public class CohabitationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.Cohabitation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCohabitationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cLegitimateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cLegitimateLegitimateKeyword_1_0 = (Keyword)cLegitimateAssignment_1.eContents().get(0);
		private final Keyword cCohabitationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeTypeOfIntimateRelationshipEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPartnersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cPartnersAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cPartnersPersonCrossReference_4_2_0 = (CrossReference)cPartnersAssignment_4_2.eContents().get(0);
		private final RuleCall cPartnersPersonEStringParserRuleCall_4_2_0_1 = (RuleCall)cPartnersPersonCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cPartnersAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cPartnersPersonCrossReference_4_3_1_0 = (CrossReference)cPartnersAssignment_4_3_1.eContents().get(0);
		private final RuleCall cPartnersPersonEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cPartnersPersonCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cChildrenKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cChildrenAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cChildrenPersonParserRuleCall_5_2_0 = (RuleCall)cChildrenAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cChildrenAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cChildrenPersonParserRuleCall_5_3_1_0 = (RuleCall)cChildrenAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		
		//Cohabitation:
		//	{Cohabitation} legitimate?='legitimate'?
		//	'Cohabitation' ('type' type=TypeOfIntimateRelationship)? ('partners' '(' partners+=[Person|EString] (","
		//	partners+=[Person|EString])* ')')? ('children' '{' children+=Person ("," children+=Person)* '}')?
		//	//'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Cohabitation} legitimate?='legitimate'? 'Cohabitation' ('type' type=TypeOfIntimateRelationship)? ('partners' '('
		//partners+=[Person|EString] ("," partners+=[Person|EString])* ')')? ('children' '{' children+=Person (","
		//children+=Person)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{Cohabitation}
		public Action getCohabitationAction_0() { return cCohabitationAction_0; }
		
		//legitimate?='legitimate'?
		public Assignment getLegitimateAssignment_1() { return cLegitimateAssignment_1; }
		
		//'legitimate'
		public Keyword getLegitimateLegitimateKeyword_1_0() { return cLegitimateLegitimateKeyword_1_0; }
		
		//'Cohabitation'
		public Keyword getCohabitationKeyword_2() { return cCohabitationKeyword_2; }
		
		//('type' type=TypeOfIntimateRelationship)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=TypeOfIntimateRelationship
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//TypeOfIntimateRelationship
		public RuleCall getTypeTypeOfIntimateRelationshipEnumRuleCall_3_1_0() { return cTypeTypeOfIntimateRelationshipEnumRuleCall_3_1_0; }
		
		//('partners' '(' partners+=[Person|EString] ("," partners+=[Person|EString])* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'partners'
		public Keyword getPartnersKeyword_4_0() { return cPartnersKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//partners+=[Person|EString]
		public Assignment getPartnersAssignment_4_2() { return cPartnersAssignment_4_2; }
		
		//[Person|EString]
		public CrossReference getPartnersPersonCrossReference_4_2_0() { return cPartnersPersonCrossReference_4_2_0; }
		
		//EString
		public RuleCall getPartnersPersonEStringParserRuleCall_4_2_0_1() { return cPartnersPersonEStringParserRuleCall_4_2_0_1; }
		
		//("," partners+=[Person|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//partners+=[Person|EString]
		public Assignment getPartnersAssignment_4_3_1() { return cPartnersAssignment_4_3_1; }
		
		//[Person|EString]
		public CrossReference getPartnersPersonCrossReference_4_3_1_0() { return cPartnersPersonCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getPartnersPersonEStringParserRuleCall_4_3_1_0_1() { return cPartnersPersonEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('children' '{' children+=Person ("," children+=Person)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'children'
		public Keyword getChildrenKeyword_5_0() { return cChildrenKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//children+=Person
		public Assignment getChildrenAssignment_5_2() { return cChildrenAssignment_5_2; }
		
		//Person
		public RuleCall getChildrenPersonParserRuleCall_5_2_0() { return cChildrenPersonParserRuleCall_5_2_0; }
		
		//("," children+=Person)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//children+=Person
		public Assignment getChildrenAssignment_5_3_1() { return cChildrenAssignment_5_3_1; }
		
		//Person
		public RuleCall getChildrenPersonParserRuleCall_5_3_1_0() { return cChildrenPersonParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
	}
	public class MarriageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.Marriage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMarriageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMarriageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeTypeOfIntimateRelationshipEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSpousesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSpousesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final CrossReference cSpousesPersonCrossReference_3_2_0 = (CrossReference)cSpousesAssignment_3_2.eContents().get(0);
		private final RuleCall cSpousesPersonEStringParserRuleCall_3_2_0_1 = (RuleCall)cSpousesPersonCrossReference_3_2_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cSpousesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final CrossReference cSpousesPersonCrossReference_3_3_1_0 = (CrossReference)cSpousesAssignment_3_3_1.eContents().get(0);
		private final RuleCall cSpousesPersonEStringParserRuleCall_3_3_1_0_1 = (RuleCall)cSpousesPersonCrossReference_3_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFromDateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFromDateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFromDateDateXParserRuleCall_4_1_0 = (RuleCall)cFromDateAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cToDateKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cToDateAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cToDateDateXParserRuleCall_5_1_0 = (RuleCall)cToDateAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cChildrenKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cChildrenAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cChildrenPersonParserRuleCall_6_2_0 = (RuleCall)cChildrenAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cChildrenAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cChildrenPersonParserRuleCall_6_3_1_0 = (RuleCall)cChildrenAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//Marriage:
		//	{Marriage}
		//	'Marriage' ('type' type=TypeOfIntimateRelationship)? ('spouses' '(' spouses+=[Person|EString] (","
		//	spouses+=[Person|EString])* ')')? ('fromDate' fromDate=DateX)? ('toDate' toDate=DateX)? ('children' '{'
		//	children+=Person ("," children+=Person)* '}')?
		//	//'}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Marriage} 'Marriage' ('type' type=TypeOfIntimateRelationship)? ('spouses' '(' spouses+=[Person|EString] (","
		//spouses+=[Person|EString])* ')')? ('fromDate' fromDate=DateX)? ('toDate' toDate=DateX)? ('children' '{'
		//children+=Person ("," children+=Person)* '}')?
		public Group getGroup() { return cGroup; }
		
		//{Marriage}
		public Action getMarriageAction_0() { return cMarriageAction_0; }
		
		//'Marriage'
		public Keyword getMarriageKeyword_1() { return cMarriageKeyword_1; }
		
		//('type' type=TypeOfIntimateRelationship)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'type'
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }
		
		//type=TypeOfIntimateRelationship
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//TypeOfIntimateRelationship
		public RuleCall getTypeTypeOfIntimateRelationshipEnumRuleCall_2_1_0() { return cTypeTypeOfIntimateRelationshipEnumRuleCall_2_1_0; }
		
		//('spouses' '(' spouses+=[Person|EString] ("," spouses+=[Person|EString])* ')')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'spouses'
		public Keyword getSpousesKeyword_3_0() { return cSpousesKeyword_3_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }
		
		//spouses+=[Person|EString]
		public Assignment getSpousesAssignment_3_2() { return cSpousesAssignment_3_2; }
		
		//[Person|EString]
		public CrossReference getSpousesPersonCrossReference_3_2_0() { return cSpousesPersonCrossReference_3_2_0; }
		
		//EString
		public RuleCall getSpousesPersonEStringParserRuleCall_3_2_0_1() { return cSpousesPersonEStringParserRuleCall_3_2_0_1; }
		
		//("," spouses+=[Person|EString])*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//spouses+=[Person|EString]
		public Assignment getSpousesAssignment_3_3_1() { return cSpousesAssignment_3_3_1; }
		
		//[Person|EString]
		public CrossReference getSpousesPersonCrossReference_3_3_1_0() { return cSpousesPersonCrossReference_3_3_1_0; }
		
		//EString
		public RuleCall getSpousesPersonEStringParserRuleCall_3_3_1_0_1() { return cSpousesPersonEStringParserRuleCall_3_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_3_4() { return cRightParenthesisKeyword_3_4; }
		
		//('fromDate' fromDate=DateX)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'fromDate'
		public Keyword getFromDateKeyword_4_0() { return cFromDateKeyword_4_0; }
		
		//fromDate=DateX
		public Assignment getFromDateAssignment_4_1() { return cFromDateAssignment_4_1; }
		
		//DateX
		public RuleCall getFromDateDateXParserRuleCall_4_1_0() { return cFromDateDateXParserRuleCall_4_1_0; }
		
		//('toDate' toDate=DateX)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'toDate'
		public Keyword getToDateKeyword_5_0() { return cToDateKeyword_5_0; }
		
		//toDate=DateX
		public Assignment getToDateAssignment_5_1() { return cToDateAssignment_5_1; }
		
		//DateX
		public RuleCall getToDateDateXParserRuleCall_5_1_0() { return cToDateDateXParserRuleCall_5_1_0; }
		
		//('children' '{' children+=Person ("," children+=Person)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'children'
		public Keyword getChildrenKeyword_6_0() { return cChildrenKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//children+=Person
		public Assignment getChildrenAssignment_6_2() { return cChildrenAssignment_6_2; }
		
		//Person
		public RuleCall getChildrenPersonParserRuleCall_6_2_0() { return cChildrenPersonParserRuleCall_6_2_0; }
		
		//("," children+=Person)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//children+=Person
		public Assignment getChildrenAssignment_6_3_1() { return cChildrenAssignment_6_3_1; }
		
		//Person
		public RuleCall getChildrenPersonParserRuleCall_6_3_1_0() { return cChildrenPersonParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class TypeOfPersonElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.TypeOfPerson");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBIOLOGICALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBIOLOGICALBIOLOGICALKeyword_0_0 = (Keyword)cBIOLOGICALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cADOPTEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cADOPTEDADOPTEDKeyword_1_0 = (Keyword)cADOPTEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSEMIADOPTEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSEMIADOPTEDSEMIADOPTEDKeyword_2_0 = (Keyword)cSEMIADOPTEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMARRIEDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMARRIEDMARRIEDKeyword_3_0 = (Keyword)cMARRIEDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDISOWNEDEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDISOWNEDDISOWNEDKeyword_4_0 = (Keyword)cDISOWNEDEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cILLEGITIMATEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cILLEGITIMATEILLEGITIMATEKeyword_5_0 = (Keyword)cILLEGITIMATEEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum TypeOfPerson:
		//	BIOLOGICAL | ADOPTED | SEMIADOPTED | MARRIED | DISOWNED | ILLEGITIMATE;
		public EnumRule getRule() { return rule; }
		
		//BIOLOGICAL | ADOPTED | SEMIADOPTED | MARRIED | DISOWNED | ILLEGITIMATE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BIOLOGICAL
		public EnumLiteralDeclaration getBIOLOGICALEnumLiteralDeclaration_0() { return cBIOLOGICALEnumLiteralDeclaration_0; }
		
		//'BIOLOGICAL'
		public Keyword getBIOLOGICALBIOLOGICALKeyword_0_0() { return cBIOLOGICALBIOLOGICALKeyword_0_0; }
		
		//ADOPTED
		public EnumLiteralDeclaration getADOPTEDEnumLiteralDeclaration_1() { return cADOPTEDEnumLiteralDeclaration_1; }
		
		//'ADOPTED'
		public Keyword getADOPTEDADOPTEDKeyword_1_0() { return cADOPTEDADOPTEDKeyword_1_0; }
		
		//SEMIADOPTED
		public EnumLiteralDeclaration getSEMIADOPTEDEnumLiteralDeclaration_2() { return cSEMIADOPTEDEnumLiteralDeclaration_2; }
		
		//'SEMIADOPTED'
		public Keyword getSEMIADOPTEDSEMIADOPTEDKeyword_2_0() { return cSEMIADOPTEDSEMIADOPTEDKeyword_2_0; }
		
		//MARRIED
		public EnumLiteralDeclaration getMARRIEDEnumLiteralDeclaration_3() { return cMARRIEDEnumLiteralDeclaration_3; }
		
		//'MARRIED'
		public Keyword getMARRIEDMARRIEDKeyword_3_0() { return cMARRIEDMARRIEDKeyword_3_0; }
		
		//DISOWNED
		public EnumLiteralDeclaration getDISOWNEDEnumLiteralDeclaration_4() { return cDISOWNEDEnumLiteralDeclaration_4; }
		
		//'DISOWNED'
		public Keyword getDISOWNEDDISOWNEDKeyword_4_0() { return cDISOWNEDDISOWNEDKeyword_4_0; }
		
		//ILLEGITIMATE
		public EnumLiteralDeclaration getILLEGITIMATEEnumLiteralDeclaration_5() { return cILLEGITIMATEEnumLiteralDeclaration_5; }
		
		//'ILLEGITIMATE'
		public Keyword getILLEGITIMATEILLEGITIMATEKeyword_5_0() { return cILLEGITIMATEILLEGITIMATEKeyword_5_0; }
	}
	public class GenderElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.Gender");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMALEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMALEMALEKeyword_0_0 = (Keyword)cMALEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFEMALEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFEMALEFEMALEKeyword_1_0 = (Keyword)cFEMALEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBIGENDEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBIGENDERBIGENDERKeyword_2_0 = (Keyword)cBIGENDEREnumLiteralDeclaration_2.eContents().get(0);
		
		//enum Gender:
		//	MALE | FEMALE | BIGENDER;
		public EnumRule getRule() { return rule; }
		
		//MALE | FEMALE | BIGENDER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MALE
		public EnumLiteralDeclaration getMALEEnumLiteralDeclaration_0() { return cMALEEnumLiteralDeclaration_0; }
		
		//'MALE'
		public Keyword getMALEMALEKeyword_0_0() { return cMALEMALEKeyword_0_0; }
		
		//FEMALE
		public EnumLiteralDeclaration getFEMALEEnumLiteralDeclaration_1() { return cFEMALEEnumLiteralDeclaration_1; }
		
		//'FEMALE'
		public Keyword getFEMALEFEMALEKeyword_1_0() { return cFEMALEFEMALEKeyword_1_0; }
		
		//BIGENDER
		public EnumLiteralDeclaration getBIGENDEREnumLiteralDeclaration_2() { return cBIGENDEREnumLiteralDeclaration_2; }
		
		//'BIGENDER'
		public Keyword getBIGENDERBIGENDERKeyword_2_0() { return cBIGENDERBIGENDERKeyword_2_0; }
	}
	public class TypeOfIntimateRelationshipElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.TypeOfIntimateRelationship");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMONOGAMYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMONOGAMYMONOGAMYKeyword_0_0 = (Keyword)cMONOGAMYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPOLYGAMYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPOLYGAMYPOLYGAMYKeyword_1_0 = (Keyword)cPOLYGAMYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPOLYFIDELITYEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPOLYFIDELITYPOLYFIDELITYKeyword_2_0 = (Keyword)cPOLYFIDELITYEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TypeOfIntimateRelationship:
		//	MONOGAMY | POLYGAMY | POLYFIDELITY;
		public EnumRule getRule() { return rule; }
		
		//MONOGAMY | POLYGAMY | POLYFIDELITY
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//MONOGAMY
		public EnumLiteralDeclaration getMONOGAMYEnumLiteralDeclaration_0() { return cMONOGAMYEnumLiteralDeclaration_0; }
		
		//'MONOGAMY'
		public Keyword getMONOGAMYMONOGAMYKeyword_0_0() { return cMONOGAMYMONOGAMYKeyword_0_0; }
		
		//POLYGAMY
		public EnumLiteralDeclaration getPOLYGAMYEnumLiteralDeclaration_1() { return cPOLYGAMYEnumLiteralDeclaration_1; }
		
		//'POLYGAMY'
		public Keyword getPOLYGAMYPOLYGAMYKeyword_1_0() { return cPOLYGAMYPOLYGAMYKeyword_1_0; }
		
		//POLYFIDELITY
		public EnumLiteralDeclaration getPOLYFIDELITYEnumLiteralDeclaration_2() { return cPOLYFIDELITYEnumLiteralDeclaration_2; }
		
		//'POLYFIDELITY'
		public Keyword getPOLYFIDELITYPOLYFIDELITYKeyword_2_0() { return cPOLYFIDELITYPOLYFIDELITYKeyword_2_0; }
	}
	
	private final GenealogyTreeElements pGenealogyTree;
	private final EStringElements pEString;
	private final DateXElements pDateX;
	private final PersonElements pPerson;
	private final EIntElements pEInt;
	private final TypeOfPersonElements eTypeOfPerson;
	private final GenderElements eGender;
	private final PersonHistoryElements pPersonHistory;
	private final CohabitationElements pCohabitation;
	private final MarriageElements pMarriage;
	private final EBooleanElements pEBoolean;
	private final TerminalRule tEDATE;
	private final TypeOfIntimateRelationshipElements eTypeOfIntimateRelationship;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGenealogyTree = new GenealogyTreeElements();
		this.pEString = new EStringElements();
		this.pDateX = new DateXElements();
		this.pPerson = new PersonElements();
		this.pEInt = new EIntElements();
		this.eTypeOfPerson = new TypeOfPersonElements();
		this.eGender = new GenderElements();
		this.pPersonHistory = new PersonHistoryElements();
		this.pCohabitation = new CohabitationElements();
		this.pMarriage = new MarriageElements();
		this.pEBoolean = new EBooleanElements();
		this.tEDATE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.genDSL2.gsl.Gsl.EDATE");
		this.eTypeOfIntimateRelationship = new TypeOfIntimateRelationshipElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.genDSL2.gsl.Gsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//GenealogyTree:
	//	'GenealogyTree'
	//	'{'
	//	'familyName' familyName=EString ('established' established=DateX)? ('persons' '{' person+=Person ("," person+=Person)*
	//	'}')?
	//	'}';
	public GenealogyTreeElements getGenealogyTreeAccess() {
		return pGenealogyTree;
	}
	
	public ParserRule getGenealogyTreeRule() {
		return getGenealogyTreeAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//DateX:
	//	{DateX}
	//	//'DateX'
	//	'{' ('year' year=EInt)? ('month' month=EInt)? ('day' day=EInt)?
	//	'}';
	public DateXElements getDateXAccess() {
		return pDateX;
	}
	
	public ParserRule getDateXRule() {
		return getDateXAccess().getRule();
	}
	
	//Person:
	//	givenName=EString
	//	//'{'
	//	& ('unknown' unknown=EBoolean)?
	//	& ('birthPlace' birthPlace=EString)?
	//	& ('deathPlace' deathPlace=EString)?
	//	& ('restingPlace' restingPlace=EString)?
	//	& ('type' type=TypeOfPerson)?
	//	& ('gender' gender=Gender)?
	//	& ('otherNames' '{' otherNames+=EString ("," otherNames+=EString)* '}')?
	//	& ('nickname' nickname=EString)?
	//	& ('deathCause' deathCause=EString)?
	//	& ('birthDate' birthDate=DateX)?
	//	& ('deathDate' deathDate=DateX)?
	//	& ('personhistory' '{' personhistory+=PersonHistory ("," personhistory+=PersonHistory)* '}')?
	//	& ('cohabitation' '{' cohabitation+=Cohabitation ("," cohabitation+=Cohabitation)* '}')?
	//	& ('marriage' '{' marriage+=Marriage ("," marriage+=Marriage)* '}')?
	//	//'}'
	//;
	public PersonElements getPersonAccess() {
		return pPerson;
	}
	
	public ParserRule getPersonRule() {
		return getPersonAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//enum TypeOfPerson:
	//	BIOLOGICAL | ADOPTED | SEMIADOPTED | MARRIED | DISOWNED | ILLEGITIMATE;
	public TypeOfPersonElements getTypeOfPersonAccess() {
		return eTypeOfPerson;
	}
	
	public EnumRule getTypeOfPersonRule() {
		return getTypeOfPersonAccess().getRule();
	}
	
	//enum Gender:
	//	MALE | FEMALE | BIGENDER;
	public GenderElements getGenderAccess() {
		return eGender;
	}
	
	public EnumRule getGenderRule() {
		return getGenderAccess().getRule();
	}
	
	//PersonHistory:
	//	{PersonHistory}
	//	'PersonHistory' ('gender' gender=Gender)? ('givenName' givenName=EString)? ('changed' changed=EDATE)?
	//	//'}'
	//;
	public PersonHistoryElements getPersonHistoryAccess() {
		return pPersonHistory;
	}
	
	public ParserRule getPersonHistoryRule() {
		return getPersonHistoryAccess().getRule();
	}
	
	//Cohabitation:
	//	{Cohabitation} legitimate?='legitimate'?
	//	'Cohabitation' ('type' type=TypeOfIntimateRelationship)? ('partners' '(' partners+=[Person|EString] (","
	//	partners+=[Person|EString])* ')')? ('children' '{' children+=Person ("," children+=Person)* '}')?
	//	//'}'
	//;
	public CohabitationElements getCohabitationAccess() {
		return pCohabitation;
	}
	
	public ParserRule getCohabitationRule() {
		return getCohabitationAccess().getRule();
	}
	
	//Marriage:
	//	{Marriage}
	//	'Marriage' ('type' type=TypeOfIntimateRelationship)? ('spouses' '(' spouses+=[Person|EString] (","
	//	spouses+=[Person|EString])* ')')? ('fromDate' fromDate=DateX)? ('toDate' toDate=DateX)? ('children' '{'
	//	children+=Person ("," children+=Person)* '}')?
	//	//'}'
	//;
	public MarriageElements getMarriageAccess() {
		return pMarriage;
	}
	
	public ParserRule getMarriageRule() {
		return getMarriageAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false'
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//terminal EDATE returns ecore::EDate:
	//	'0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9' '-' '0'..'9' '0'..'9';
	public TerminalRule getEDATERule() {
		return tEDATE;
	}
	
	//enum TypeOfIntimateRelationship:
	//	MONOGAMY | POLYGAMY | POLYFIDELITY;
	public TypeOfIntimateRelationshipElements getTypeOfIntimateRelationshipAccess() {
		return eTypeOfIntimateRelationship;
	}
	
	public EnumRule getTypeOfIntimateRelationshipRule() {
		return getTypeOfIntimateRelationshipAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
