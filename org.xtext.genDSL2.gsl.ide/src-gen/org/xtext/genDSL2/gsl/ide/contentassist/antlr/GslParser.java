/*
 * generated by Xtext 2.10.0
 */
package org.xtext.genDSL2.gsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.xtext.genDSL2.gsl.ide.contentassist.antlr.internal.InternalGslParser;
import org.xtext.genDSL2.gsl.services.GslGrammarAccess;

public class GslParser extends AbstractContentAssistParser {

	@Inject
	private GslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalGslParser createParser() {
		InternalGslParser result = new InternalGslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getTypeOfPersonAccess().getAlternatives(), "rule__TypeOfPerson__Alternatives");
					put(grammarAccess.getGenderAccess().getAlternatives(), "rule__Gender__Alternatives");
					put(grammarAccess.getTypeOfIntimateRelationshipAccess().getAlternatives(), "rule__TypeOfIntimateRelationship__Alternatives");
					put(grammarAccess.getGenealogyTreeAccess().getGroup(), "rule__GenealogyTree__Group__0");
					put(grammarAccess.getGenealogyTreeAccess().getGroup_4(), "rule__GenealogyTree__Group_4__0");
					put(grammarAccess.getGenealogyTreeAccess().getGroup_5(), "rule__GenealogyTree__Group_5__0");
					put(grammarAccess.getGenealogyTreeAccess().getGroup_5_3(), "rule__GenealogyTree__Group_5_3__0");
					put(grammarAccess.getDateXAccess().getGroup(), "rule__DateX__Group__0");
					put(grammarAccess.getDateXAccess().getGroup_2(), "rule__DateX__Group_2__0");
					put(grammarAccess.getDateXAccess().getGroup_3(), "rule__DateX__Group_3__0");
					put(grammarAccess.getDateXAccess().getGroup_4(), "rule__DateX__Group_4__0");
					put(grammarAccess.getPersonAccess().getGroup_1(), "rule__Person__Group_1__0");
					put(grammarAccess.getPersonAccess().getGroup_2(), "rule__Person__Group_2__0");
					put(grammarAccess.getPersonAccess().getGroup_3(), "rule__Person__Group_3__0");
					put(grammarAccess.getPersonAccess().getGroup_4(), "rule__Person__Group_4__0");
					put(grammarAccess.getPersonAccess().getGroup_5(), "rule__Person__Group_5__0");
					put(grammarAccess.getPersonAccess().getGroup_6(), "rule__Person__Group_6__0");
					put(grammarAccess.getPersonAccess().getGroup_7(), "rule__Person__Group_7__0");
					put(grammarAccess.getPersonAccess().getGroup_7_3(), "rule__Person__Group_7_3__0");
					put(grammarAccess.getPersonAccess().getGroup_8(), "rule__Person__Group_8__0");
					put(grammarAccess.getPersonAccess().getGroup_9(), "rule__Person__Group_9__0");
					put(grammarAccess.getPersonAccess().getGroup_10(), "rule__Person__Group_10__0");
					put(grammarAccess.getPersonAccess().getGroup_11(), "rule__Person__Group_11__0");
					put(grammarAccess.getPersonAccess().getGroup_12(), "rule__Person__Group_12__0");
					put(grammarAccess.getPersonAccess().getGroup_12_3(), "rule__Person__Group_12_3__0");
					put(grammarAccess.getPersonAccess().getGroup_13(), "rule__Person__Group_13__0");
					put(grammarAccess.getPersonAccess().getGroup_13_3(), "rule__Person__Group_13_3__0");
					put(grammarAccess.getPersonAccess().getGroup_14(), "rule__Person__Group_14__0");
					put(grammarAccess.getPersonAccess().getGroup_14_3(), "rule__Person__Group_14_3__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getPersonHistoryAccess().getGroup(), "rule__PersonHistory__Group__0");
					put(grammarAccess.getPersonHistoryAccess().getGroup_2(), "rule__PersonHistory__Group_2__0");
					put(grammarAccess.getPersonHistoryAccess().getGroup_3(), "rule__PersonHistory__Group_3__0");
					put(grammarAccess.getPersonHistoryAccess().getGroup_4(), "rule__PersonHistory__Group_4__0");
					put(grammarAccess.getCohabitationAccess().getGroup(), "rule__Cohabitation__Group__0");
					put(grammarAccess.getCohabitationAccess().getGroup_3(), "rule__Cohabitation__Group_3__0");
					put(grammarAccess.getCohabitationAccess().getGroup_4(), "rule__Cohabitation__Group_4__0");
					put(grammarAccess.getCohabitationAccess().getGroup_5(), "rule__Cohabitation__Group_5__0");
					put(grammarAccess.getCohabitationAccess().getGroup_5_3(), "rule__Cohabitation__Group_5_3__0");
					put(grammarAccess.getMarriageAccess().getGroup(), "rule__Marriage__Group__0");
					put(grammarAccess.getMarriageAccess().getGroup_2(), "rule__Marriage__Group_2__0");
					put(grammarAccess.getMarriageAccess().getGroup_3(), "rule__Marriage__Group_3__0");
					put(grammarAccess.getMarriageAccess().getGroup_3_3(), "rule__Marriage__Group_3_3__0");
					put(grammarAccess.getMarriageAccess().getGroup_4(), "rule__Marriage__Group_4__0");
					put(grammarAccess.getMarriageAccess().getGroup_5(), "rule__Marriage__Group_5__0");
					put(grammarAccess.getMarriageAccess().getGroup_6(), "rule__Marriage__Group_6__0");
					put(grammarAccess.getMarriageAccess().getGroup_6_3(), "rule__Marriage__Group_6_3__0");
					put(grammarAccess.getGenealogyTreeAccess().getFamilyNameAssignment_3(), "rule__GenealogyTree__FamilyNameAssignment_3");
					put(grammarAccess.getGenealogyTreeAccess().getEstablishedAssignment_4_1(), "rule__GenealogyTree__EstablishedAssignment_4_1");
					put(grammarAccess.getGenealogyTreeAccess().getPersonAssignment_5_2(), "rule__GenealogyTree__PersonAssignment_5_2");
					put(grammarAccess.getGenealogyTreeAccess().getPersonAssignment_5_3_1(), "rule__GenealogyTree__PersonAssignment_5_3_1");
					put(grammarAccess.getDateXAccess().getYearAssignment_2_1(), "rule__DateX__YearAssignment_2_1");
					put(grammarAccess.getDateXAccess().getMonthAssignment_3_1(), "rule__DateX__MonthAssignment_3_1");
					put(grammarAccess.getDateXAccess().getDayAssignment_4_1(), "rule__DateX__DayAssignment_4_1");
					put(grammarAccess.getPersonAccess().getGivenNameAssignment_0(), "rule__Person__GivenNameAssignment_0");
					put(grammarAccess.getPersonAccess().getUnknownAssignment_1_1(), "rule__Person__UnknownAssignment_1_1");
					put(grammarAccess.getPersonAccess().getBirthPlaceAssignment_2_1(), "rule__Person__BirthPlaceAssignment_2_1");
					put(grammarAccess.getPersonAccess().getDeathPlaceAssignment_3_1(), "rule__Person__DeathPlaceAssignment_3_1");
					put(grammarAccess.getPersonAccess().getRestingPlaceAssignment_4_1(), "rule__Person__RestingPlaceAssignment_4_1");
					put(grammarAccess.getPersonAccess().getTypeAssignment_5_1(), "rule__Person__TypeAssignment_5_1");
					put(grammarAccess.getPersonAccess().getGenderAssignment_6_1(), "rule__Person__GenderAssignment_6_1");
					put(grammarAccess.getPersonAccess().getOtherNamesAssignment_7_2(), "rule__Person__OtherNamesAssignment_7_2");
					put(grammarAccess.getPersonAccess().getOtherNamesAssignment_7_3_1(), "rule__Person__OtherNamesAssignment_7_3_1");
					put(grammarAccess.getPersonAccess().getNicknameAssignment_8_1(), "rule__Person__NicknameAssignment_8_1");
					put(grammarAccess.getPersonAccess().getDeathCauseAssignment_9_1(), "rule__Person__DeathCauseAssignment_9_1");
					put(grammarAccess.getPersonAccess().getBirthDateAssignment_10_1(), "rule__Person__BirthDateAssignment_10_1");
					put(grammarAccess.getPersonAccess().getDeathDateAssignment_11_1(), "rule__Person__DeathDateAssignment_11_1");
					put(grammarAccess.getPersonAccess().getPersonhistoryAssignment_12_2(), "rule__Person__PersonhistoryAssignment_12_2");
					put(grammarAccess.getPersonAccess().getPersonhistoryAssignment_12_3_1(), "rule__Person__PersonhistoryAssignment_12_3_1");
					put(grammarAccess.getPersonAccess().getCohabitationAssignment_13_2(), "rule__Person__CohabitationAssignment_13_2");
					put(grammarAccess.getPersonAccess().getCohabitationAssignment_13_3_1(), "rule__Person__CohabitationAssignment_13_3_1");
					put(grammarAccess.getPersonAccess().getMarriageAssignment_14_2(), "rule__Person__MarriageAssignment_14_2");
					put(grammarAccess.getPersonAccess().getMarriageAssignment_14_3_1(), "rule__Person__MarriageAssignment_14_3_1");
					put(grammarAccess.getPersonHistoryAccess().getGenderAssignment_2_1(), "rule__PersonHistory__GenderAssignment_2_1");
					put(grammarAccess.getPersonHistoryAccess().getGivenNameAssignment_3_1(), "rule__PersonHistory__GivenNameAssignment_3_1");
					put(grammarAccess.getPersonHistoryAccess().getChangedAssignment_4_1(), "rule__PersonHistory__ChangedAssignment_4_1");
					put(grammarAccess.getCohabitationAccess().getLegitimateAssignment_1(), "rule__Cohabitation__LegitimateAssignment_1");
					put(grammarAccess.getCohabitationAccess().getTypeAssignment_3_1(), "rule__Cohabitation__TypeAssignment_3_1");
					put(grammarAccess.getCohabitationAccess().getPartnersAssignment_4_1(), "rule__Cohabitation__PartnersAssignment_4_1");
					put(grammarAccess.getCohabitationAccess().getChildrenAssignment_5_2(), "rule__Cohabitation__ChildrenAssignment_5_2");
					put(grammarAccess.getCohabitationAccess().getChildrenAssignment_5_3_1(), "rule__Cohabitation__ChildrenAssignment_5_3_1");
					put(grammarAccess.getMarriageAccess().getTypeAssignment_2_1(), "rule__Marriage__TypeAssignment_2_1");
					put(grammarAccess.getMarriageAccess().getSpousesAssignment_3_2(), "rule__Marriage__SpousesAssignment_3_2");
					put(grammarAccess.getMarriageAccess().getSpousesAssignment_3_3_1(), "rule__Marriage__SpousesAssignment_3_3_1");
					put(grammarAccess.getMarriageAccess().getFromDateAssignment_4_1(), "rule__Marriage__FromDateAssignment_4_1");
					put(grammarAccess.getMarriageAccess().getToDateAssignment_5_1(), "rule__Marriage__ToDateAssignment_5_1");
					put(grammarAccess.getMarriageAccess().getChildrenAssignment_6_2(), "rule__Marriage__ChildrenAssignment_6_2");
					put(grammarAccess.getMarriageAccess().getChildrenAssignment_6_3_1(), "rule__Marriage__ChildrenAssignment_6_3_1");
					put(grammarAccess.getPersonAccess().getUnorderedGroup(), "rule__Person__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalGslParser typedParser = (InternalGslParser) parser;
			typedParser.entryRuleGenealogyTree();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
